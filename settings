Option Explicit

Sub lang_hover(shp As Shape)
lang_unhover
Shapes(shp.Name & "_back").Shadow.Visible = msoTrue
Shapes(shp.Name & "_back").Fill.ForeColor.RGB = RGB(242, 242, 242)
shp.Line.Visible = msoTrue
playSound (ActivePresentation.Path & "\MazeMaker_Data\sfx\editor_block_place_1.wav")
End Sub

Sub lang_click(shp As Shape)
playSound (ActivePresentation.Path & "\MazeMaker_Data\sfx\game_button_click.wav")
gamesettings_language_set shp.Name
Shapes("langsel").Top = shp.Top
End Sub

Sub lang_unhover()
Shapes("pt-pt_back").Shadow.Visible = msoFalse
Shapes("pt-br_back").Shadow.Visible = msoFalse
Shapes("en-gb_back").Shadow.Visible = msoFalse
Shapes("pt-pt_back").Fill.ForeColor.RGB = RGB(255, 255, 255)
Shapes("pt-br_back").Fill.ForeColor.RGB = RGB(255, 255, 255)
Shapes("en-gb_back").Fill.ForeColor.RGB = RGB(255, 255, 255)
Shapes("pt-pt").Line.Visible = msoFalse
Shapes("pt-br").Line.Visible = msoFalse
Shapes("en-gb").Line.Visible = msoFalse
End Sub

Sub checkforupdates()
On Error GoTo handler
Shapes("cover").Visible = msoTrue
Shapes("loading_updates").Visible = msoTrue
WebBrowser1.Navigate "https://pptgamespt.wixsite.com/pptg-online/updates/latest/maze-maker"
Do While WebBrowser1.Busy = True: DoEvents: Loop
Shapes("db").TextFrame.TextRange.Text = time
Pausecode (5)
Do While WebBrowser1.Document.getElementById("comp-jvzi1ef7").innerText = "loading": DoEvents: Loop
Shapes("db").TextFrame.TextRange.Text = time
Pausecode (1)
lv.Caption = WebBrowser1.Document.getElementById("comp-jvzi1ef7").innerText
Shapes("loading_updates").Visible = msoFalse
If val(WebBrowser1.Document.getElementById("comp-jvzi1ef7").innerText) > val(EQL5_GetElementValue(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), "code")) Then
Shapes("result_updates").Visible = msoTrue
Shapes("game_txt_update").Visible = msoTrue
Shapes("updates_result_1").TextFrame.TextRange.Text = gamesettings_laguange_get("update_available")
Shapes("updates_result_2").TextFrame.TextRange.Text = gamesettings_laguange_get("click_update")
Else
Shapes("result_updates").Visible = msoTrue
Shapes("game_txt_update").Visible = msoFalse
Shapes("updates_result_1").TextFrame.TextRange.Text = gamesettings_laguange_get("up_to_date")
Shapes("updates_result_2").TextFrame.TextRange.Text = gamesettings_laguange_get("no_updates_found")
End If
FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\settings.mmcf", Replace(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\settings.mmcf"), """last_update_check"":""" & _
game_getcursett("last_update_check") & """;", """last_update_check"":""" & Date & " " & time & """;")
Shapes("lastupdatecheck").TextFrame.TextRange.Text = gamesettings_laguange_get("last_update_check") & ": " & game_getcursett("last_update_check")

Exit Sub
handler: MsgBox "An error occurred while checking for updates.", vbExclamation, "Check for updates"
Shapes("cover").Visible = msoFalse
Shapes("loading_updates").Visible = msoFalse
game_createerrorlog "check_for_updates" & vbNewLine & "Details:" & vbNewLine & Err & vbNewLine & error
End Sub

Sub cancelupdates()
Shapes("cover").Visible = msoFalse
Shapes("loading_updates").Visible = msoFalse
End
End Sub

Sub closeupdates()
Shapes("cover").Visible = msoFalse
Shapes("result_updates").Visible = msoFalse
End Sub

Sub installupdate()
On Error GoTo handler
curupt.Caption = val(EQL5_GetElementValue(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), "code")) + 1
Dim i As Integer
For i = val(curupt.Caption) To val(lv.Caption)
curupt.Caption = i
Shapes("result_updates").Visible = msoFalse
Shapes("iu_title").TextFrame.TextRange.Text = gamesettings_laguange_get("updating_title")
Shapes("iu_desc").TextFrame.TextRange.Text = gamesettings_laguange_get("updating_desc")
update_changelog.Text = gamesettings_laguange_get("loading")
update_changelog.Visible = True
ActivePresentation.SlideShowWindow.View.ResetSlideTime
Shapes("update_install").Visible = msoTrue
WebBrowser1.Navigate "https://pptgamespt.wixsite.com/pptg-online/updates/maze-maker/" & curupt.Caption
Do While WebBrowser1.Busy = True: DoEvents: Loop
Shapes("db").TextFrame.TextRange.Text = time
Pausecode (5)
Do While WebBrowser1.Document.getElementById("comp-jvzhvv0w").innerText = "loading": DoEvents: Loop
Shapes("db").TextFrame.TextRange.Text = time
Pausecode (1)
update_changelog.Text = gamesettings_laguange_get("version") & " " & WebBrowser1.Document.getElementById("comp-jvzhvv0w").innerText & vbNewLine & _
EQL5_GetElementValue(WebBrowser1.Document.getElementById("comp-jvzhzlv6").innerText, game_getcursett("language"))
ActivePresentation.VBProject.VBComponents("CodeCache").CodeModule.DeleteLines 1, ActivePresentation.VBProject.VBComponents("CodeCache").CodeModule.CountOfLines
Shapes("db").TextFrame.TextRange.Text = time
Pausecode (1)
ActivePresentation.VBProject.VBComponents("CodeCache").CodeModule.AddFromString (WebBrowser1.Document.getElementById("comp-jvzi4nw2").innerText)
Shapes("db").TextFrame.TextRange.Text = time
Pausecode (1)
Application.Run "setup"
Next

Exit Sub
handler: MsgBox "An error occurred while updating." & vbNewLine & vbNewLine & "Details:" & vbNewLine & Err & vbNewLine & error, vbExclamation, "Install update"
update_changelog.Visible = True
ActivePresentation.SlideShowWindow.View.ResetSlideTime
Shapes("update_install").Visible = msoFalse
Shapes("cover").Visible = msoFalse
game_createerrorlog "install_update" & vbNewLine & "Details:" & vbNewLine & Err & vbNewLine & error
End Sub

Sub finishupdate()
If curupt.Caption = lv.Caption Then
FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\version.mmcf", Replace(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), _
EQL5_GetElementValue(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), "code"), lv.Caption)
'FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\version.mmcf", Replace(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), _
EQL5_GetElementValue(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), "name"), WebBrowser1.Document.getElementById("comp-jvzhvv0w").innerText)
'FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\changelog\en-gb.txt", EQL5_GetElementValue(WebBrowser1.Document.getElementById("comp-jvzhzlv6").innerText, "en-gb")
'FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\changelog\pt-pt.txt", EQL5_GetElementValue(WebBrowser1.Document.getElementById("comp-jvzhzlv6").innerText, "pt-pt")
'FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\changelog\pt-br.txt", EQL5_GetElementValue(WebBrowser1.Document.getElementById("comp-jvzhzlv6").innerText, "pt-br")
Slide2.Shapes("changelog").TextFrame.TextRange.Text = FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\changelog\" & game_getcursett("language") & ".txt")
Slide2.Shapes("version").TextFrame.TextRange.Text = "ver " & EQL5_GetElementValue(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), "name")
Slide17.Shapes("gamever").TextFrame.TextRange.Text = "ver " & EQL5_GetElementValue(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\version.mmcf"), "name")
gamesettings_language_set game_getcursett("language")
Shapes("update_install").Visible = msoFalse
update_changelog.Visible = False
ActivePresentation.SlideShowWindow.View.ResetSlideTime
Shapes("update_finished").Visible = msoTrue
End If
End Sub

Sub updatefinished_ok()
Shapes("cover").Visible = msoFalse
Shapes("update_finished").Visible = msoFalse
ActivePresentation.SlideShowWindow.View.GotoSlide 1, msoTrue
End Sub

Sub oll_change(shp As Shape)
Shapes("oll_sel").Left = shp.Left
playSound (ActivePresentation.Path & "\MazeMaker_Data\sfx\game_button_click.wav")

FS_ExportFile ActivePresentation.Path & "\MazeMaker_Data\settings.mmcf", Replace(FS_ReadFile(ActivePresentation.Path & "\MazeMaker_Data\settings.mmcf"), """online_loading_latency"":""" & _
game_getcursett("online_loading_latency") & """;", """online_loading_latency"":""" & Right(shp.Name, 2) & """;")
End Sub
